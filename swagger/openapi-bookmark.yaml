openapi: 3.0.1
info:
  title: bookmark-service
  description: Lambda-based microservice to store lists of hyperlinks 2
  version: "1.0"
servers:
- url: /
paths:
  /bookmark:
    post:
      summary: Create a new bookmark
      description: Create a new bookmark
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookmark'
        required: true
      responses:
        200:
          description: Success
          content: {}
        400:
          description: Bad Request
          content: {}
        401:
          description: Unauthorized
          content: {}
        500:
          description: Internal Server Error
          content: {}
      x-amazon-apigateway-request-validators:
        basic:
          validateRequestParameters: true
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostLambdaFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
        responses: {}
  /bookmark/{title}:
    get:
      summary: Get a bookmark
      description: Get a bookmark
      parameters:
      - name: title
        in: path
        description: Title of bookmark to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
              example:
              - title: cool-programming-links
                links:
                - title: Google home page
                  link: https://google.com
                - title: Typescript is cool
                  link: https://typescript.io
      x-amazon-apigateway-request-validators:
        basic:
          validateRequestParameters: true
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetLambdaFunction.Arn}/invocations
        passthroughBehavior: when_no_match
        httpMethod: GET
        type: aws_proxy
        responses: {}
components:
  schemas:
    Bookmark:
      title: Bookmark
      type: object
      properties:
        title:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Link:
      title: Link
      type: object
      properties:
        title:
          type: string
        url:
          type: string
